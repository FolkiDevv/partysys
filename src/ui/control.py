from __future__ import annotations

import discord

from src import utils
from src.models import TCBans
from src.services import errors

from .adv import AdvInterface
from .embeds import ErrorEmbed, InterfaceEmbed, SuccessEmbed, WarningEmbed
from .modals import LimitModal, RenameModal
from .views import (
    BanInterface,
    GetAccessInterface,
    PrivacyInterface,
    TakeAccessInterface,
    UnbanInterface,
)


class ControlInterface(AdvInterface):
    def __init__(self, bot: utils.BotABC):
        super().__init__(bot)
        self.bot = bot

    async def interaction_check(self, interaction: discord.Interaction) -> bool:
        if interaction.channel_id != self.check(
                interaction
        ).channel.id and self.bot.server(interaction.guild_id).channel(
            interaction.channel_id
        ):
            raise errors.UserUseAlienControlInterfaceError
        return True

    @discord.ui.button(
        emoji=discord.PartialEmoji(name="rename", id=1174291347511980052),
        custom_id="rename",
        row=0,
    )
    @AdvInterface.check_decorator
    async def rename(
            self,
            interaction: discord.Interaction,
            temp_voice: utils.TempVoiceABC,
            *_,
    ):
        await interaction.response.send_modal(
            RenameModal(self.bot, temp_voice.channel.name)
        )

    @discord.ui.button(
        emoji=discord.PartialEmoji(name="change_limit", id=1174292033062580276),
        custom_id="limit",
        row=0,
    )
    @AdvInterface.check_decorator
    async def limit(
            self, interaction: discord.Interaction,
            temp_voice: utils.TempVoiceABC, *_
    ):
        await interaction.response.send_modal(
            LimitModal(self.bot, temp_voice.channel.user_limit)
        )

    @discord.ui.button(
        emoji=discord.PartialEmoji(name="privacy", id=1174291348388589652),
        custom_id="privacy",
        row=0,
    )
    @AdvInterface.check_decorator
    async def privacy(
            self, interaction: discord.Interaction,
            temp_voice: utils.TempVoiceABC, *_
    ):
        await interaction.response.send_message(
            ephemeral=True,
            view=PrivacyInterface(self.bot, temp_voice.privacy),
            embed=InterfaceEmbed(
                title="–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏",
                text="üîì –ü—É–±–ª–∏—á–Ω—ã–π - –≤—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç "
                     "–ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è—Ç—å—Å—è/–≤–∏–¥–µ—Ç—å –≤–∞—à –∫–∞–Ω–∞–ª."
                     "\nüîí –ó–∞–∫—Ä—ã—Ç—ã–π - –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è —Å–º–æ–≥—É—Ç —Ç–æ–ª—å–∫–æ —Ç–µ "
                     "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏, –∫–æ—Ç–æ—Ä—ã–º –≤—ã "
                     "<:get_access:1174291352339623956>"
                     "–†–∞–∑—Ä–µ—à–∏—Ç–µ.\n"
                     "üîê –°–∫—Ä—ã—Ç—ã–π - –∞–Ω–∞–ª–æ–≥–∏—á–µ–Ω –ó–∞–∫—Ä—ã—Ç–æ–º—É, –æ–¥–Ω–∞–∫–æ –≤ —ç—Ç–æ–º —Å–ª—É—á–∞–µ "
                     "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏,"
                     "–∫–æ—Ç–æ—Ä—ã–º –≤—ã –Ω–µ <:get_access:1174291352339623956> "
                     "–†–∞–∑—Ä–µ—à–∞–ª–∏ –Ω–µ"
                     "—Å–º–æ–≥—É—Ç –≤–∏–¥–µ—Ç—å –≤–∞—à –∫–∞–Ω–∞–ª.",
            ),
        )

    @discord.ui.button(
        emoji=discord.PartialEmoji(name="get_access", id=1174291352339623956),
        custom_id="get_access",
        row=1,
    )
    @AdvInterface.check_decorator
    async def get_access(self, interaction: discord.Interaction, *_):
        await interaction.response.send_message(
            ephemeral=True,
            view=GetAccessInterface(self.bot),
            embed=InterfaceEmbed(
                title="–†–∞–∑—Ä–µ—à–∏—Ç—å –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å/–ø–æ–¥–∫–ª—é—á–∞—Ç—å—Å—è –∫ –∫–∞–Ω–∞–ª—É",
                text="–í—ã–±—Ä–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–º–æ–≥—É—Ç "
                     "–ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è—Ç—å—Å—è/–ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –≤–∞—à –∫–∞–Ω–∞–ª"
                     "(–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ, –µ—Å–ª–∏ —Ä–µ–∂–∏–º –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏ –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞ –Ω–µ "
                     "–ü—É–±–ª–∏—á–Ω—ã–π).",
            ),
        )

    @discord.ui.button(
        emoji=discord.PartialEmoji(name="take_access", id=1174291359792898218),
        custom_id="take_access",
        row=1,
    )
    @AdvInterface.check_decorator
    async def take_access(self, interaction: discord.Interaction, *_):
        await interaction.response.send_message(
            ephemeral=True,
            view=TakeAccessInterface(self.bot),
            embed=InterfaceEmbed(
                title="–ó–∞–ø—Ä–µ—Ç–∏—Ç—å –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å/–ø–æ–¥–∫–ª—é—á–∞—Ç—å—Å—è –∫ –∫–∞–Ω–∞–ª—É",
                text="–í—ã–±—Ä–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ù–ï —Å–º–æ–≥—É—Ç "
                     "–ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è—Ç—å—Å—è/–ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –≤–∞—à –∫–∞–Ω–∞–ª"
                     "(–≤–Ω–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏).",
            ),
        )

    @discord.ui.button(
        emoji=discord.PartialEmoji(name="kick", id=1174291365300011079),
        custom_id="kick",
        row=1,
        disabled=True,
    )
    @AdvInterface.check_decorator
    async def kick(self, interaction: discord.Interaction, *_):
        await interaction.response.send_message(
            ephemeral=True,
            embed=WarningEmbed(
                "–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º Discord:"
                "\n**–ù–∞–∂–º–∏—Ç–µ –ü–ö–ú –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ –í–∞—à–µ–º –∫–∞–Ω–∞–ª–µ -> –û—Ç–∫–ª—é—á–∏—Ç—å**"
            )
        )

    @discord.ui.button(
        emoji=discord.PartialEmoji(name="ban", id=1174291351106506792),
        custom_id="ban",
        row=1,
    )
    async def ban(self, interaction: discord.Interaction, *_):
        await interaction.response.send_message(
            ephemeral=True,
            view=BanInterface(self.bot),
            embed=InterfaceEmbed(
                title="–ó–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
                text="–í—ã–±—Ä–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—É–¥–µ—Ç –æ—Ç–∫–ª—é—á–µ–Ω –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ "
                     "–≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞"
                     "–∏ –Ω–µ —Å–º–æ–∂–µ—Ç –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å/–ø–æ–¥–∫–ª—é—á–∞—Ç—å—Å—è –∫ –≤–∞—à–∏–º "
                     "–Ω–æ–≤–æ-—Å–æ–∑–¥–∞–Ω–Ω—ã–º –∫–∞–Ω–∞–ª–∞–º.",
            ),
        )

    @discord.ui.button(
        emoji=discord.PartialEmoji(name="unban", id=1174291357586706442),
        custom_id="unban",
        row=2,
    )
    async def unban(
            self, interaction: discord.Interaction,
            temp_voice: utils.TempVoiceABC, *_
    ):
        if ban_list_raw := await TCBans.filter(
                server=temp_voice.server_id,
                dis_creator_id=temp_voice.creator.id,
                banned=True,
        ):
            await interaction.response.send_message(
                ephemeral=True,
                view=UnbanInterface(
                    self.bot,
                    interaction.guild,
                    ban_list_raw
                ),
                embed=InterfaceEmbed(
                    title="–†–∞–∑–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
                    text="–í—ã–±—Ä–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—É–¥–µ—Ç —É–±—Ä–∞–Ω —Å –≤–∞—à–µ–≥–æ "
                         "–±–∞–Ω-–ª–∏—Å—Ç–∞.",
                ),
            )
        else:
            await interaction.response.send_message(
                ephemeral=True,
                embed=ErrorEmbed(
                    "–°–ø–∏—Å–æ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—É—Å—Ç."
                    "\n–ù–µ –±–æ–π—Ç–µ—Å—å –µ–≥–æ –ø–æ–ø–æ–ª–Ω–∏—Ç—å, –µ—Å–ª–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è :)"
                ),
            )

    @discord.ui.button(
        emoji=discord.PartialEmoji(name="return_owner", id=1174291361390940241),
        custom_id="return_owner",
        row=2,
    )
    async def return_owner(self, interaction: discord.Interaction, *_):
        if server := self.bot.server(interaction.guild_id):
            temp_voice = server.get_user_transferred_channel(
                interaction.user.id
            )
            if temp_voice and temp_voice.owner != temp_voice.creator:
                if server.get_user_channel(interaction.user):
                    raise errors.UserAlreadyOwnerError
                await temp_voice.channel.send(
                    f"<:info:1177314633124696165> {temp_voice.owner.mention} "
                    f"–ü—Ä–∞–≤–∞ –Ω–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–æ–º –±—ã–ª–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã "
                    f"—Å–æ–∑–¥–∞—Ç–µ–ª—é –∫–∞–Ω–∞–ª–∞."
                )
                await temp_voice.change_owner(interaction.user)
                await interaction.response.send_message(
                    ephemeral=True,
                    embed=SuccessEmbed(
                        "–í–∞–º –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –ø—Ä–∞–≤–∞ –Ω–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–æ–º."
                    ),
                )
            else:
                raise errors.UserAlreadyOwnerError
        else:
            raise errors.BotNotConfiguredError

    @discord.ui.button(
        emoji=discord.PartialEmoji(
            name="transfer_owner", id=1174291356210962462
        ),
        custom_id="transfer_owner",
        row=2,
    )
    @AdvInterface.check_decorator
    async def transfer_owner(self, interaction: discord.Interaction, *_):
        await interaction.response.send_message(
            ephemeral=True,
            embed=InterfaceEmbed(
                title="–ü–µ—Ä–µ–¥–∞—Ç—å –ø—Ä–∞–≤–∞ –Ω–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–º",
                text="–í—ã–±—Ä–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏—Ç –≤–∞—à–∏ –ø—Ä–∞–≤–∞ –Ω–∞ "
                     "—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–º "
                     "–∏ –≤—ã –±–æ–ª—å—à–µ –Ω–µ —Å–º–æ–∂–µ—Ç–µ –∏–º —É–ø—Ä–∞–≤–ª—è—Ç—å, –ø–æ–∫–∞ –Ω–µ –≤–µ—Ä–Ω–µ—Ç–µ –∏—Ö "
                     "—Å–µ–±–µ.",
            ),
        )

    @discord.ui.button(
        emoji=discord.PartialEmoji(name="trash", id=1174291363873951776),
        custom_id="del_channel",
        row=2,
    )
    @AdvInterface.check_decorator
    async def del_channel(
            self, interaction: discord.Interaction,
            temp_voice: utils.TempVoiceABC, *_
    ):
        await self.bot.server(interaction.guild_id).del_channel(
            temp_voice.channel.id
        )
